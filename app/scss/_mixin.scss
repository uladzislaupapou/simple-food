@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin background($background-repeat: no-repeat, $background-position: center, $background-size: 100%) {
  background-repeat: $background-repeat;
  background-position: $background-position;
  background-size: $background-size;
}

@mixin line-clamp($lines: 1) {
  @if $lines <=1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @else {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
  }
}

@mixin font-face($font-family, $url, $weight, $style: normal) {
  @font-face {
    font-family: "#{$font-family}";
    src: url('../fonts/#{$url}.woff2') format("woff2"),
    url('../fonts/#{$url}.woff') format("woff");
    font-weight: $weight;
    font-display: swap;
    font-style: $style;
  }
}

@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type ==max {
      $width: $width - 1px;
    }

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

@mixin burger($burgerWidth, $burgerHeight, $burgerLineHeight, $burgerColor) {
  width: $burgerWidth;
  height: $burgerHeight; 
  position: relative;
  color: $burgerColor; 

  &__line {
    position: absolute;
    top: 50%;
    left: 50%; 
    width: 30px;
    height: $burgerLineHeight;
    background-color: currentColor;
    transform: translate(-50%, -50%);
    transition: transform 0.3s ease-in-out;
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    left: 50%;
    width: 30px;
    height: $burgerLineHeight;
    background-color: currentColor;
    transform: translateX(-50%);
    transition: transform 0.3s ease-in-out, top 0.3s ease-in-out;
  }

  &::before {
    top: 11px;
  }

  &::after {
    bottom: 11px;
  }
}